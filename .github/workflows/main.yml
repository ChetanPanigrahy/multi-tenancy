on: [push]
name: Linux_Container_Workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: Replace DB Source
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "_DB_SOURCE_"
          replace: ${{ secrets.DB_DATASOURCE }}

      - name: Replace DB User Name
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "_DB_USERNAME_"
          replace: ${{ secrets.DB_USERNAME }}

      - name: Replace DB Password
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "_DB_SECRET_"
          replace: ${{ secrets.DB_SECRET }}

      - name: Replace Kafka Server
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "_BOOTSTRAP_SERVER_"
          replace: ${{ secrets.KAFKA_BOOTSTRAP_SERVER }}

      - name: Replace Kafka Config
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "_BOOTSTRAP_CONFIG_"
          replace: ${{ secrets.KAFKA_CONFIG }}

      - name: Replace Storage Connection
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "_STORAGE_CONNECTION_"
          replace: ${{ secrets.AZURE_STORAGE_CONNECTION }}

      - name: Replace Neo4J DB Url
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "_NEO4J_URL_"
          replace: ${{ secrets.NEO4J_DB_SOURCE }}

      - name: Replace Neo4J DB User Name
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "_NEO4J_USERNAME_"
          replace: ${{ secrets.NEO4J_DB_USERNAME }}

      - name: Replace Neo4J DB Password
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "_NEO4J_SECRET_"
          replace: ${{ secrets.NEO4J_DB_SECRET }}

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      - name: 'Build with Maven'
        run: |
          mvn clean
          mvn --batch-mode --update-snapshots verify -f pom.xml

      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/org-service:latest -f org-service/Dockerfile
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/org-service:latest

          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/multi-tenant-service:latest -f multi-tenant-service/Dockerfile
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/multi-tenant-service:latest

          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/multi-tenant-management:latest -f multi-tenant-management/Dockerfile
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/multi-tenant-management:latest

      - name: 'Deploy Org Service to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
            resource-group: ${{ secrets.RESOURCE_GROUP }}
            dns-name-label: orgService
            image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/org-service:latest
            registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            registry-username: ${{ secrets.REGISTRY_USERNAME }}
            registry-password: ${{ secrets.REGISTRY_PASSWORD }}
            name: org
            location: 'east us'

      - name: 'Deploy Tenant Management Service to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: tenantMgmtService
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/multi-tenant-management:latest
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: tenantmgmt
          location: 'east us'

      - name: 'Deploy Tenant Service to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: tenantService
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/multi-tenant-service:latest
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: tenant
          location: 'east us'

